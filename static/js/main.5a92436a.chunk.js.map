{"version":3,"sources":["application/form/FormDialog.tsx","application/view/components/BasicAppBar.tsx","application/view/dragdroplist/FloatingActionButton.tsx","application/view/dragdroplist/DragDropList.tsx","infrastructure/mapper/ShopDataMapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","appBar","position","title","marginLeft","spacing","flex","FormDialog","Props","classes","onChange","e","target","name","form","value","amount","parseInt","Dialog","fullScreen","open","onClose","aria-labelledby","AppBar","className","Toolbar","IconButton","edge","color","onClick","aria-label","Typography","variant","Button","handler","checked","DialogContent","TextField","autoFocus","label","type","fullWidth","root","flexGrow","menuButton","marginRight","BasicAppBar","margin","fabButton","bottom","left","right","FloatingActionButton","Fab","DragDropList","onDragEnd","droppableId","provided","snapshot","List","ref","innerRef","droppableProps","style","isDraggingOver","background","items","map","item","index","labelId","draggableId","providedDraggable","snapshotDraggable","ListItem","draggableProps","dragHandleProps","draggableStyle","isDragging","isChecked","userSelect","borderBottom","opacity","textDecorationLine","onItemToggle","ListItemIcon","Checkbox","icon","checkedIcon","inputProps","ListItemText","primary","secondary","ListItemSecondaryAction","onItemRemove","fontSize","placeholder","onDialogOpen","create","reorder","list","startIndex","endIndex","result","splice","removed","App","state","bind","destination","this","source","setState","length","Container","marginTop","maxWidth","newChecked","React","Component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a92436a.chunk.js","sourcesContent":["import { AppBar, createStyles, IconButton, Theme } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React from 'react';\nimport { IDialogProps } from './IDialogProps';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n    }),\n);\n\nexport default function FormDialog(Props: IDialogProps): JSX.Element {\n    const classes = useStyles();\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        switch (e.target.name) {\n        case 'name':\n            Props.form.name = e.target.value;\n            break;\n        case 'amount':\n            Props.form.amount = parseInt(e.target.value);\n            break;\n        }\n    };\n\n    const onSubmit = (): void => {\n        Props.handler({\n            name: Props.form.name,\n            amount: Props.form.amount,\n            checked: false\n        });\n    };\n\n    return (\n        <Dialog fullScreen open={Props.open} onClose={Props.onClose} aria-labelledby=\"add-to-list\">\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={Props.onClose} aria-label=\"close\">\n                        <CloseIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Add to list\n                    </Typography>\n                    <Button color=\"inherit\" onClick={onSubmit}>\n                        save\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    name=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    onChange={onChange}\n                    fullWidth\n                />\n                <TextField\n                    name=\"amount\"\n                    label=\"Quantity\"\n                    type=\"number\"\n                    onChange={onChange}\n                    fullWidth\n                />\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nexport default function BasicAppBar(): JSX.Element {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        BoodschApp\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { FloatingActionProps } from './IFloatingActionProps';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n        },\n        fabButton: {\n            position: 'absolute',\n            bottom: theme.spacing(2),\n            left: 0,\n            right: 0,\n            margin: '0 auto',\n        },\n    }),\n);\n\nexport default function FloatingActionButton(Props: FloatingActionProps): JSX.Element {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fabButton} onClick={Props.onClick}>\n                <AddShoppingCartIcon />\n            </Fab>\n        </div>\n    );\n}\n","import {\n    Checkbox,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React from 'react';\nimport {\n    DragDropContext,\n    Draggable,\n    DraggableProvided,\n    DraggableStateSnapshot,\n    DraggingStyle,\n    Droppable,\n    DroppableProvided,\n    DroppableStateSnapshot,\n    NotDraggingStyle\n} from 'react-beautiful-dnd';\nimport FloatingActionButton from './FloatingActionButton';\nimport { IDragDropProps } from './IDragDropProps';\n\nexport default function DragDropList(Props: IDragDropProps): JSX.Element {\n    const getItemStyle = (draggableStyle: DraggingStyle | NotDraggingStyle | undefined, isDragging: boolean, isChecked: boolean): React.CSSProperties => ({\n        userSelect: 'none',\n        background: isDragging ? 'lightgrey' : 'white',\n        borderBottom: '1px solid #e8e8e8',\n        opacity: isChecked ? '0.4' : '1.0',\n        textDecorationLine: isChecked ? 'line-through' : 'none',\n        ...draggableStyle\n    });\n\n    const getListStyle = (isDraggingOver: boolean): React.CSSProperties => ({\n        background: isDraggingOver ? 'lightblue' : 'white'\n    });\n\n    return (\n        <DragDropContext onDragEnd={Props.onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided: DroppableProvided, snapshot: DroppableStateSnapshot) => (\n                    <List\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                        style={getListStyle(snapshot.isDraggingOver)}\n                    >\n                        {Props.items.map((item, index) => {\n                            const labelId = `item-${index}`;\n\n                            return (\n                                <Draggable key={index} draggableId={labelId} index={index}>\n                                    {(providedDraggable: DraggableProvided, snapshotDraggable: DraggableStateSnapshot) => (\n                                        <ListItem\n                                            ref={providedDraggable.innerRef}\n                                            {...providedDraggable.draggableProps}\n                                            {...providedDraggable.dragHandleProps}\n                                            style={getItemStyle(\n                                                providedDraggable.draggableProps.style,\n                                                snapshotDraggable.isDragging,\n                                                item.checked\n                                            )}\n                                            onClick={Props.onItemToggle(index)}\n                                        >\n                                            <ListItemIcon>\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    icon={<CheckBoxOutlineBlankIcon/>}\n                                                    checkedIcon={<CheckBoxIcon/>}\n                                                    checked={item.checked}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={item.name}\n                                                secondary={'Quantity: ' + item.amount}\n                                            />\n                                            <ListItemSecondaryAction>\n                                                <IconButton\n                                                    aria-label=\"delete\"\n                                                    onClick={Props.onItemRemove(index)}\n                                                >\n                                                    <DeleteIcon fontSize=\"inherit\"/>\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    )}\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </List>\n                )}\n            </Droppable>\n            <FloatingActionButton onClick={Props.onDialogOpen} />\n        </DragDropContext>\n    );\n}","import { IShopData } from '../../domain/IShopData';\n\nexport function create(name: string, amount: number, checked: boolean): IShopData {\n    return { name, amount, checked };\n}\n\nexport function reorder(list: IShopData[], startIndex: number, endIndex: number): IShopData[] {\n    const result = [ ...list ];\n    const [ removed ] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n}","import { Container } from '@material-ui/core';\nimport React from 'react';\nimport { DropResult } from 'react-beautiful-dnd';\nimport './App.css';\nimport FormDialog from './application/form/FormDialog';\nimport BasicAppBar from './application/view/components/BasicAppBar';\nimport DragDropList from './application/view/dragdroplist/DragDropList';\nimport { IAppState } from './domain/IAppState';\nimport { IShopData } from './domain/IShopData';\nimport { create, reorder } from './infrastructure/mapper/ShopDataMapper';\n\nexport default class App extends React.Component<unknown, IAppState> {\n    constructor(Props: unknown) {\n        super(Props);\n\n        this.state = {\n            items: [\n                create('Frozen yoghurt', 1, false),\n                create('Ice cream sandwich', 3, false),\n                create('Eclair', 1, false),\n                create('Cupcake', 1, false),\n                create('Gingerbread', 2, false),\n            ],\n            open: false,\n        };\n\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.onDialogOpen = this.onDialogOpen.bind(this);\n    }\n\n    public onDragEnd(result: DropResult): void {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const items = reorder(this.state.items, result.source.index, result.destination.index);\n\n        this.setState({ ...this.state, items });\n    }\n\n    public onDialogOpen(): void {\n        this.setState({ open: true });\n    }\n\n    public render(): JSX.Element {\n        const handleToggle = (index: number) => () => {\n            const newChecked = [ ...this.state.items ];\n            newChecked[index].checked = !newChecked[index].checked;\n            const items = reorder(newChecked, index, newChecked[index].checked ? (newChecked.length - 1) : index);\n\n            this.setState({ ...this.state, items });\n        };\n\n        const handleRemove = (index: number) => () => {\n            this.state.items.splice(index, 1);\n\n            this.setState({ items: this.state.items });\n        };\n\n        const handleAddition = (item: IShopData): void => {\n            const items = reorder(\n                [ ...this.state.items, create(item.name, item.amount, item.checked) ],\n                this.state.items.length,\n                0,\n            );\n\n            this.setState({ ...this.state, items, open: false });\n        };\n\n        return (\n            <div className=\"App\">\n                <BasicAppBar/>\n                <FormDialog\n                    open={this.state.open}\n                    onClose={() => this.setState({ open: false })}\n                    handler={handleAddition}\n                    form={{ name: '', amount: 1 }}\n                />\n                <Container style={{ marginTop: 20 }} maxWidth={'md'}>\n                    <DragDropList\n                        items={this.state.items}\n                        onDragEnd={this.onDragEnd}\n                        onDialogOpen={this.onDialogOpen}\n                        onItemToggle={handleToggle}\n                        onItemRemove={handleRemove}\n                    />\n                </Container>\n            </div>\n        );\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}